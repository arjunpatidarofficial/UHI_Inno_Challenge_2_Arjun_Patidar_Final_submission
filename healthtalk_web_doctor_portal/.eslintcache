[{"C:\\Users\\ishan\\Desktop\\nuvocliniq_website-main\\src\\index.js":"1","C:\\Users\\ishan\\Desktop\\nuvocliniq_website-main\\src\\pages\\Profile.js":"2","C:\\Users\\ishan\\Desktop\\nuvocliniq_website-main\\src\\pages\\home.js":"3","C:\\Users\\ishan\\Desktop\\nuvocliniq_website-main\\src\\pages\\contactForm.js":"4","C:\\Users\\ishan\\Desktop\\nuvocliniq_website-main\\src\\pages\\doctor\\docDetails.js":"5","C:\\Users\\ishan\\Desktop\\nuvocliniq_website-main\\src\\pages\\doctor\\singleAppointment.js":"6","C:\\Users\\ishan\\Desktop\\nuvocliniq_website-main\\src\\pages\\doctor\\users\\history.js":"7","C:\\Users\\ishan\\Desktop\\nuvocliniq_website-main\\src\\pages\\labProvider\\dashboard_lp.js":"8","C:\\Users\\ishan\\Desktop\\nuvocliniq_website-main\\src\\pages\\patient\\plogin.js":"9","C:\\Users\\ishan\\Desktop\\nuvocliniq_website-main\\src\\components\\dropdownList.js":"10","C:\\Users\\ishan\\Desktop\\nuvocliniq_website-main\\src\\components\\leftMenu.js":"11","C:\\Users\\ishan\\Desktop\\nuvocliniq_website-main\\src\\pages\\doctor\\suggestion.js":"12","C:\\Users\\ishan\\Desktop\\nuvocliniq_website-main\\src\\pages\\doctor\\telemidicine\\prescription.js":"13","C:\\Users\\ishan\\Desktop\\nuvocliniq_website-main\\src\\pages\\patient\\calendar.js":"14","C:\\Users\\ishan\\Desktop\\nuvocliniq_website-main\\src\\pages\\signin.js":"15","C:\\Users\\ishan\\Desktop\\nuvocliniq_website-main\\src\\pages\\doctor\\telemidicine\\telemedicine.js":"16","C:\\Users\\ishan\\Desktop\\nuvocliniq_website-main\\src\\pages\\doctor\\users\\edit.js":"17","C:\\Users\\ishan\\Desktop\\nuvocliniq_website-main\\src\\pages\\labProvider\\bookings_lp.js":"18","C:\\Users\\ishan\\Desktop\\nuvocliniq_website-main\\src\\components\\arrays.js":"19","C:\\Users\\ishan\\Desktop\\nuvocliniq_website-main\\src\\pages\\doctor\\telemidicine\\videoCall.js":"20","C:\\Users\\ishan\\Desktop\\nuvocliniq_website-main\\src\\App.js":"21","C:\\Users\\ishan\\Desktop\\nuvocliniq_website-main\\src\\pages\\signup.js":"22","C:\\Users\\ishan\\Desktop\\nuvocliniq_website-main\\src\\components\\navbar.js":"23","C:\\Users\\ishan\\Desktop\\nuvocliniq_website-main\\src\\pages\\doctor\\docNav.js":"24","C:\\Users\\ishan\\Desktop\\nuvocliniq_website-main\\src\\pages\\doctor\\docAppointments.js":"25","C:\\Users\\ishan\\Desktop\\nuvocliniq_website-main\\src\\pages\\doctor\\docCalander.js":"26","C:\\Users\\ishan\\Desktop\\nuvocliniq_website-main\\src\\pages\\doctor\\telemidicine\\CometChatMessages\\index.js":"27","C:\\Users\\ishan\\Desktop\\nuvocliniq_website-main\\src\\pages\\doctor\\telemidicine\\CometUtils\\util\\enums.js":"28"},{"size":625,"mtime":1646226391000,"results":"29","hashOfConfig":"30"},{"size":4379,"mtime":1646226391000,"results":"31","hashOfConfig":"30"},{"size":11632,"mtime":1657959838735,"results":"32","hashOfConfig":"30"},{"size":3920,"mtime":1646226391000,"results":"33","hashOfConfig":"30"},{"size":7965,"mtime":1646226391000,"results":"34","hashOfConfig":"30"},{"size":11397,"mtime":1646226391000,"results":"35","hashOfConfig":"30"},{"size":12882,"mtime":1646226391000,"results":"36","hashOfConfig":"30"},{"size":1282,"mtime":1646226391000,"results":"37","hashOfConfig":"30"},{"size":9544,"mtime":1646226391000,"results":"38","hashOfConfig":"30"},{"size":14391,"mtime":1646226391000,"results":"39","hashOfConfig":"30"},{"size":4086,"mtime":1657963971598,"results":"40","hashOfConfig":"30"},{"size":4097,"mtime":1646226391000,"results":"41","hashOfConfig":"30"},{"size":28693,"mtime":1657899107012,"results":"42","hashOfConfig":"30"},{"size":11082,"mtime":1657909405166,"results":"43","hashOfConfig":"30"},{"size":7510,"mtime":1657962331752,"results":"44","hashOfConfig":"30"},{"size":517,"mtime":1657976931205,"results":"45","hashOfConfig":"30"},{"size":8032,"mtime":1646226391000,"results":"46","hashOfConfig":"30"},{"size":8924,"mtime":1646226391000,"results":"47","hashOfConfig":"30"},{"size":235,"mtime":1646226391000,"results":"48","hashOfConfig":"30"},{"size":8035,"mtime":1657948896789,"results":"49","hashOfConfig":"30"},{"size":8368,"mtime":1657960011296,"results":"50","hashOfConfig":"30"},{"size":5868,"mtime":1657963261244,"results":"51","hashOfConfig":"30"},{"size":3693,"mtime":1657961882295,"results":"52","hashOfConfig":"30"},{"size":5816,"mtime":1657965595831,"results":"53","hashOfConfig":"30"},{"size":17428,"mtime":1657964833001,"results":"54","hashOfConfig":"30"},{"size":23681,"mtime":1657965499112,"results":"55","hashOfConfig":"30"},{"size":41824,"mtime":1657975513044,"results":"56","hashOfConfig":"30"},{"size":5735,"mtime":1657952430154,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"5v1o30",{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"77"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ishan\\Desktop\\nuvocliniq_website-main\\src\\index.js",[],["120","121"],"C:\\Users\\ishan\\Desktop\\nuvocliniq_website-main\\src\\pages\\Profile.js",["122","123","124"],"import React, { useState, useRef } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n//import { auth, db, storage } from \"../firebase\";\r\n//import { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { useAuth } from \"../contexts\";\r\nimport { DocNav } from \"./doctor/docNav\";\r\nimport { DoctorDetailsInput } from \"./doctor/docDetails\";\r\n\r\nimport { CropperPopup } from \"../components/cropper\";\r\n\r\nexport const DocProfile = (props) => {\r\n  let [loggedIn, setLoggedIn] = useState(useAuth());\r\n  //console.log(loggedIn.userDetails.profilePic);\r\n  var imageRef = useRef();\r\n  var initialPic = loggedIn.userDetails.img ? loggedIn.userDetails.img : \"\";\r\n  let [image, setImage] = useState(initialPic);\r\n  let [tempImage, setTempImage] = useState();\r\n  let [popup, setPopup] = useState(false);\r\n  var history = useHistory();\r\n\r\n  const handleChangeImage = (e) => {\r\n    const image = e.target.files[0];\r\n    setTempImage(URL.createObjectURL(image));\r\n    setPopup(true);\r\n  };\r\n\r\n  if (!loggedIn.currentUser) {\r\n    history.push(\"/\");\r\n    return <div></div>;\r\n  } else if (loggedIn)\r\n    return (\r\n      <div>\r\n        <CropperPopup\r\n          open={popup}\r\n          close={() => setPopup(false)}\r\n          src={tempImage}\r\n          setImage={setImage}\r\n          uid={loggedIn.currentUser.uid}\r\n        />\r\n        <DocNav />\r\n        <div className=\"flex justify-center\">\r\n          <div className=\"flex flex-col items-center sm:w-8/12 lg:w-6/12 sm:shadow-lg\">\r\n            <div name=\"profilePic\" className=\" flex mt-14 sm:w-80\">\r\n              <div className=\" shadow-xl rounded-full\">\r\n                {image !== \"\" ? (\r\n                  <img className=\"w-28 h-28 rounded-full\" src={image}></img>\r\n                ) : (\r\n                  <div className=\" rounded-full text-black\">\r\n                    <i\r\n                      style={{ fontSize: \"120px\" }}\r\n                      class=\"fas fa-user-circle\"\r\n                    ></i>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div className=\"my-2 z-10 absolute ml-20 \">\r\n                <input\r\n                  ref={imageRef}\r\n                  type=\"file\"\r\n                  onChange={handleChangeImage}\r\n                  style={{ display: \"none\" }}\r\n                ></input>\r\n                <Link\r\n                  onClick={() => imageRef.current.click()}\r\n                  className=\"text-white p-1 h-10 w-10 rounded-full\"\r\n                  style={{ backgroundColor: \"#008713\" }}\r\n                >\r\n                  <i className=\"ml-1 h-10 w-6 fas fa-pen\"></i>\r\n                </Link>\r\n              </div>\r\n              <div className=\"ml-4 mt-2\">\r\n                <div className=\"font-bold text-xl\">\r\n                  {loggedIn.userDetails.name}\r\n                </div>\r\n                <div>{loggedIn.userDetails.city}</div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"px-3 pb-5 my-5 w-full lg:w-10/12 border-b-2  border-gray-200 flex justify-end\">\r\n              <Link\r\n                to=\"/docDetails\"\r\n                className=\"text-sm bg-blue-500 text-white px-2 rounded\"\r\n              >\r\n                Edit Profile\r\n              </Link>\r\n            </div>\r\n\r\n            <div name=\"profile fields\" className=\"flex flex-col sm:w-96 my-5\">\r\n              <div className=\"my-3\">\r\n                <div>Phone Number</div>\r\n                <div>{loggedIn.userDetails.number}</div>\r\n              </div>\r\n              <div className=\"my-3\">\r\n                <div>Specialisation</div>\r\n                <div>{loggedIn.userDetails.specialist}</div>\r\n              </div>\r\n              <div className=\"my-3\">\r\n                <div>Address</div>\r\n                <div>{loggedIn.userDetails.address}</div>\r\n              </div>\r\n              <div className=\"my-3\">\r\n                <div>Email</div>\r\n                <div>{loggedIn.userDetails.email}</div>\r\n              </div>\r\n              <div className=\"my-3\">\r\n                <div>Brief Profile</div>\r\n                <div>{loggedIn.userDetails.profile}</div>\r\n              </div>\r\n              <div className=\"my-3\">\r\n                <div>Fee</div>\r\n                <div>{loggedIn.userDetails.fee}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n","C:\\Users\\ishan\\Desktop\\nuvocliniq_website-main\\src\\pages\\home.js",["125","126","127","128"],"C:\\Users\\ishan\\Desktop\\nuvocliniq_website-main\\src\\pages\\contactForm.js",["129","130"],"C:\\Users\\ishan\\Desktop\\nuvocliniq_website-main\\src\\pages\\doctor\\docDetails.js",["131","132"],"C:\\Users\\ishan\\Desktop\\nuvocliniq_website-main\\src\\pages\\doctor\\singleAppointment.js",["133","134","135","136","137"],"C:\\Users\\ishan\\Desktop\\nuvocliniq_website-main\\src\\pages\\doctor\\users\\history.js",["138","139","140","141","142","143","144","145","146","147","148","149"],"C:\\Users\\ishan\\Desktop\\nuvocliniq_website-main\\src\\pages\\labProvider\\dashboard_lp.js",["150","151"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { useAuth } from \"../../contexts\";\nimport { LabProviderNav } from \"./navbar_lp\";\nimport { Menu } from \"./menu_lp\";\n\nimport { WaitingApproval } from \"./waiting\";\nimport { ChartBar } from \"./charts\";\n\nconst DashboardComp = (props) => {\n  let [loggedIn, setLoggedIn] = useState(useAuth());\n  console.log(loggedIn.currentUser)\n  \n  if (!loggedIn.currentUser) {\n    window.location.href = \"/lab_provider_signup\";\n    return <div></div>;\n  } else if (loggedIn.currentUser.displayName !== \"lab provider\") {\n    //window.location.href = \"/patientHome\";\n    return <div></div>;\n  } \n  else if (loggedIn.userDetails.verify === true)\n    return (\n      <WaitingApproval/>\n    );\n  else if (loggedIn.userDetails.verify === false)\n    return (\n      <>\n        <div className=\"w-full\">\n         <ChartBar/>\n        </div>\n      </>\n    );\n};\n\nexport const LabDashboard = () => {\n  return (\n    <div className=\" min-w-full min-h-screen flex bg-white\">\n      <Menu activeComponent={\"dashboard\"} />\n      <div\n        name=\"otherThanLeftMenu\"\n        className=\"w-full overflow-y-scroll overflow-x-hidden h-screen\"\n      >\n        <LabProviderNav />\n        <DashboardComp />\n      </div>\n    </div>\n  );\n};\n",["152","153"],"C:\\Users\\ishan\\Desktop\\nuvocliniq_website-main\\src\\pages\\patient\\plogin.js",["154","155"],"C:\\Users\\ishan\\Desktop\\nuvocliniq_website-main\\src\\components\\dropdownList.js",[],"C:\\Users\\ishan\\Desktop\\nuvocliniq_website-main\\src\\components\\leftMenu.js",["156"],"C:\\Users\\ishan\\Desktop\\nuvocliniq_website-main\\src\\pages\\doctor\\suggestion.js",["157","158","159","160"],"C:\\Users\\ishan\\Desktop\\nuvocliniq_website-main\\src\\pages\\doctor\\telemidicine\\prescription.js",["161","162","163","164","165","166","167","168","169","170"],"import React, { useEffect, useRef, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { db, storage } from '../../../firebase';\nimport axios from 'axios';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nimport { RxNameSuggest, TestSuggest } from '../suggestion';\n\nimport Lottie from 'react-lottie';\nvar loader = require('../../../components/nuvoLoader.json');\n\nvar storageRef = storage.ref();\n\nconst sendToast = (message, type) => {\n  const tostMsg = {\n    position: 'top-right',\n    autoClose: 5000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  };\n  if (type === 'error') toast.error(message, tostMsg);\n  else if (type === 'info') toast.info(message, tostMsg);\n  else if (type === 'success') toast.success(message, tostMsg);\n};\nconst defaultOptions = {\n  loop: true,\n  autoplay: true,\n  animationData: loader,\n  rendererSettings: {\n    preserveAspectRatio: 'xMidYMid meet',\n  },\n};\n\nexport const Prescription = (props) => {\n  let [activeComponent, setActiveComponent] = useState('generalInfo');\n\n  let params = useParams();\n\n  const ActiveComponent = () => {\n    if (activeComponent === 'generalInfo')\n      return <GeneralInfo appId={params.appId} />;\n    else if (activeComponent === 'rx') return <Rx appId={params.appId} />;\n    else if (activeComponent === 'nextReview')\n      return <NextReview appId={params.appId} />;\n  };\n\n  return (\n    <div>\n      <ToastContainer\n        position='top-right'\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n      <div className='w-full flex justify-center mt-5  text-lg text-gray-600 '>\n        <div className='sm:flex sm:rounded-full sm:shadow-lg  sm:border-2 py-1 px-3'>\n          <div className='w-max px-5 py-1 '>\n            <Link\n              onClick={(e) => {\n                e.preventDefault();\n                setActiveComponent('generalInfo');\n              }}\n              className={`${\n                activeComponent === 'generalInfo'\n                  ? 'text-blue-700 font-semibold'\n                  : null\n              } flex w-max items-center hover:text-blue-700`}\n            >\n              <i class='far fa-calendar-check'></i>\n              <div className=' pl-2'>General Info</div>\n            </Link>\n          </div>\n          <div className='w-max px-5 py-1 '>\n            <Link\n              className={`${\n                activeComponent === 'rx' ? 'text-blue-700 font-semibold' : null\n              } flex w-max items-center hover:text-blue-700`}\n              onClick={(e) => {\n                e.preventDefault();\n                setActiveComponent('rx');\n              }}\n            >\n              <i class='far fa-calendar-alt'></i>\n              <div className='pl-2'>Rx</div>\n            </Link>\n          </div>\n          <div className='w-max px-5 py-1 '>\n            <Link\n              className={`${\n                activeComponent === 'nextReview'\n                  ? 'text-blue-700 font-semibold'\n                  : null\n              } flex w-max items-center hover:text-blue-700`}\n              onClick={(e) => {\n                e.preventDefault();\n                setActiveComponent('nextReview');\n              }}\n            >\n              {' '}\n              <i class='fas fa-history'></i>\n              <div className='pl-2'>Next Review</div>\n            </Link>\n          </div>\n        </div>\n      </div>\n      <ActiveComponent />\n    </div>\n  );\n};\n\nconst GeneralInfo = (props) => {\n  let [appInfo, setAppInfo] = useState();\n  let [patientInfo, setPatientInfo] = useState({});\n  let [docInfo, setDocInfo] = useState();\n  let [initialData, setInitialData] = useState({});\n  let [allergies, setAllergies] = useState({});\n\n  let params = useParams();\n\n  useEffect(async () => {\n    await db\n      .collection('prescription')\n      .doc(props.appId)\n      .get()\n      .then((res) => {\n        if (res.data()) setInitialData(res.data());\n      });\n  }, []);\n  useEffect(async () => {\n    if (!appInfo)\n      await db\n        .collection(`${params.type}`)\n        .doc(props.appId)\n        .get()\n        .then((res) => {\n          setAppInfo(res.data());\n          //console.log(res.data())\n        });\n    if (appInfo)\n      await db\n        .collection('patients')\n        .doc(appInfo.patientId)\n        .get()\n        .then((res) => {\n          if (res.data()) setPatientInfo(res.data());\n          else {\n            db.collection('tempUsers')\n              .doc(appInfo.patientId)\n              .get()\n              .then((tres) => {\n                setPatientInfo(tres.data());\n              });\n          }\n          //console.log(res.data())\n        });\n    if (appInfo)\n      await db\n        .collection('doctors')\n        .doc(appInfo.doctorId)\n        .get()\n        .then((res) => {\n          setDocInfo(res.data());\n          //console.log(res.data())\n        });\n  }, [appInfo]);\n\n  var genderRef = useRef();\n  var ageRef = useRef();\n  var heightRef = useRef();\n  var weightRef = useRef();\n  var rrRef = useRef();\n  var tempRef = useRef();\n  var bpRef = useRef();\n  var spo2Ref = useRef();\n  var pulseRef = useRef();\n  var advisedTestRef = useRef();\n  var pcRef = useRef();\n  var kcoRef = useRef();\n\n  const handleUpdateClick = (e) => {\n    e.preventDefault();\n    let gender = genderRef.current.value;\n    let age = ageRef.current.value;\n    let height = heightRef.current.value;\n    let weight = weightRef.current.value;\n    let rr = rrRef.current.value;\n    let temperature = tempRef.current.value;\n    let bp = bpRef.current.value;\n    let spo2 = spo2Ref.current.value;\n    let pulse = pulseRef.current.value;\n    let advicedTest = advisedTestRef.current.value;\n    let pc = pcRef.current.value;\n    let kco = kcoRef.current.value;\n\n    let tempPres = {\n      date: appInfo.date,\n      gender: gender,\n      age: age,\n      height: height,\n      weight: weight,\n      rr: rr,\n      temperature: temperature,\n      bp: bp,\n      spo2: spo2,\n      pulse: pulse,\n      adviceTest: advicedTest,\n      appointmentId: props.appId,\n      d_address: docInfo.address ? docInfo.address : '',\n      specialist: docInfo.specialist ? docInfo.specialist : '',\n      p_address: patientInfo.address ? patientInfo.address : '',\n      patientId: appInfo.patientId,\n      pname: patientInfo.name ? patientInfo.name : '',\n      doctorId: appInfo.doctorId,\n      dname: docInfo.name,\n      presentingComp: pc,\n      knownCase: kco,\n      regNumber: docInfo.regNumber,\n    };\n    //console.log(tempPres)\n    if (tempPres) {\n      db.collection('prescription')\n        .doc(props.appId)\n        .get()\n        .then((cRes) => {\n          if (cRes.data()) {\n            db.collection('prescription')\n              .doc(props.appId)\n              .update(tempPres)\n              .then((res) => {\n                sendToast('Successfully updated general info!', 'success');\n                window.scrollTo(0, 0);\n              })\n              .catch((err) => console.log(err));\n          } else {\n            db.collection('prescription')\n              .doc(props.appId)\n              .set(tempPres)\n              .then((res) => {\n                sendToast('Successfully updated general info!', 'success');\n                window.scrollTo(0, 0);\n              })\n              .catch((err) => console.log(err));\n          }\n        });\n    }\n  };\n  if (initialData !== {} || patientInfo !== {})\n    return (\n      <>\n        <div className='px-5 w-full sm:flex py-8 text-lg text-gray-600'>\n          <div className='sm:w-6/12 w-full space-y-2'>\n            <div className='w-full'>\n              <div>Patient's Gender</div>\n              <select\n                defaultValue={\n                  initialData.gender ? initialData.gender : patientInfo.gender\n                }\n                ref={genderRef}\n                className='rounded-md mt-1 px-2 py-1 border-2'\n                placeholder='Enter Gender'\n              >\n                <option>Male</option>\n                <option>Female</option>\n              </select>\n            </div>\n            <div className='w-full'>\n              <div>Age (in years)</div>\n              <input\n                defaultValue={\n                  initialData.age ? initialData.age : patientInfo.age\n                }\n                ref={ageRef}\n                className='rounded-md mt-1 px-2 py-1 border-2'\n                placeholder='Enter Age'\n              ></input>\n            </div>\n            <div className='w-full'>\n              <div>Height (in cm)</div>\n              <input\n                defaultValue={\n                  initialData.height ? initialData.height : patientInfo.height\n                }\n                ref={heightRef}\n                className='rounded-md mt-1 px-2 py-1 border-2'\n                placeholder='Enter Height'\n              ></input>\n            </div>\n            <div className='w-full'>\n              <div>Weight (in kg)</div>\n              <input\n                defaultValue={\n                  initialData.weight ? initialData.weight : patientInfo.weight\n                }\n                ref={weightRef}\n                className='rounded-md mt-1 px-2 py-1 border-2'\n                placeholder='Enter Weight'\n              ></input>\n            </div>\n            <div className='w-full'>\n              <div>Respiratory Rate (per min)</div>\n              <input\n                defaultValue={initialData.rr}\n                ref={rrRef}\n                className='rounded-md mt-1 px-2 py-1 border-2'\n                placeholder='Enter RR'\n              ></input>\n            </div>\n            <div className='w-full'>\n              <div>Temperature (°F)</div>\n              <input\n                defaultValue={initialData.temperature}\n                ref={tempRef}\n                className='rounded-md mt-1 px-2 py-1 border-2'\n                placeholder='Enter Temperature'\n              ></input>\n            </div>\n            <div className='w-full'>\n              <div>BP (mmHg)</div>\n              <input\n                defaultValue={initialData.bp}\n                ref={bpRef}\n                className='rounded-md mt-1 px-2 py-1 border-2'\n                placeholder='Enter BP'\n              ></input>\n            </div>\n          </div>\n          <div className='sm:w-6/12 w-full space-y-2'>\n            <div className='w-full'>\n              <div>SPO2 (%)</div>\n              <input\n                defaultValue={initialData.spo2}\n                ref={spo2Ref}\n                className='rounded-md px-2 py-1 border-2'\n                placeholder='Enter SPO2'\n              ></input>\n            </div>\n            <div className='w-full'>\n              <div>Pulse (per min)</div>\n              <input\n                defaultValue={initialData.pulse}\n                ref={pulseRef}\n                className='rounded-md mt-1 px-2 py-1 border-2'\n                placeholder='Enter Pulse'\n              ></input>\n            </div>\n            <div className='w-full'>\n              <div>Presenting Complaint</div>\n              <input\n                defaultValue={initialData.presentingComp}\n                ref={pcRef}\n                className='rounded-md mt-1 px-2 py-1 border-2'\n                placeholder='Enter Presenting Complaint'\n              ></input>\n            </div>\n            <div className='w-full'>\n              <div>Known Case Of</div>\n              <input\n                defaultValue={initialData.knownCase}\n                ref={kcoRef}\n                className='rounded-md mt-1 px-2 py-1 border-2'\n                placeholder='Enter k/c/o'\n              ></input>\n            </div>\n            <div className='w-full'>\n              <div>Advised Tests</div>\n              <input\n                defaultValue={initialData.adviceTest}\n                ref={advisedTestRef}\n                className='rounded-md mt-1 px-2 py-1 border-2'\n                placeholder='Enter Advised Tests'\n              ></input>\n            </div>\n          </div>\n        </div>\n\n        <div className='px-5 w-full sm:flex py-8 text-lg text-gray-600'>\n          <div className='sm:w-6/12 w-full space-y-2'>\n            <div className='mb-2 flex items-center  outline-none'>\n              <button\n                onClick={(e) => {\n                  e.preventDefault();\n                }}\n                className={`${\n                  allergies.morphine ? 'border-blue-300' : 'border-gray-400'\n                } border-2 text-blue-500 outline-none rounded mr-2 h-5 w-5 p-1 flex items-center justify-center`}\n              >\n                <i\n                  className={`fas fa-check outline-none ${\n                    allergies.morphine ? '' : 'hidden'\n                  }`}\n                ></i>\n              </button>\n              <div className='text-base'>Are yourself?</div>\n            </div>\n          </div>\n          <div className='sm:w-6/12 w-full space-y-2'>\n            <div className='w-full'>\n              <div>SPO2 (%)</div>\n              <input\n                defaultValue={initialData.spo2}\n                ref={spo2Ref}\n                className='rounded-md px-2 py-1 border-2'\n                placeholder='Enter SPO2'\n              ></input>\n            </div>\n          </div>\n        </div>\n\n        <Link\n          onClick={handleUpdateClick}\n          className='rounded-md py-2 px-3 text-white bg-blue-500 hover:bg-blue-700 font-semibold text-lg'\n        >\n          Update\n        </Link>\n      </>\n    );\n  else return <div></div>;\n};\n\nconst Rx = (props) => {\n  let [activeComp, setActiveComp] = useState('list');\n  let [activeRx, setActiveRx] = useState();\n  let [rxArray, setRxArray] = useState();\n  let [rxname, setRxname] = useState('');\n\n  var dosageRef = useRef();\n  var freqRef = useRef();\n  var durationRef = useRef();\n  var formulaRef = useRef();\n\n  useEffect(async () => {\n    let first = await db\n      .collection('prescription')\n      .doc(props.appId)\n      .collection('rx');\n    first.onSnapshot((snap) => {\n      setRxArray(snap.docs);\n    });\n    //console.log(first.docs[0].data())\n  }, []);\n\n  const RxList = () => {\n    if (rxArray)\n      return (\n        <div className=' text-gray-700 text-lg'>\n          <div className='w-full flex justify-end my-8'>\n            <Link\n              className='bg-blue-500 hover:bg-blue-700 text-white rounded-md px-2 py-1 mx-5'\n              onClick={(e) => {\n                e.preventDefault();\n                setActiveComp('add');\n              }}\n            >\n              Add RX\n            </Link>\n          </div>\n\n          {rxArray.map((item) => {\n            return (\n              <div className='mt-2'>\n                <Link\n                  onClick={(e) => {\n                    e.preventDefault();\n                    setActiveRx(item);\n                    setActiveComp('single');\n                  }}\n                  className='hover:text-blue-600 mt-2 px-2 py-1'\n                >\n                  <div>Name:</div>\n                  <div>\n                    {item.data().name} ({item.data().formula})\n                  </div>\n                </Link>\n              </div>\n            );\n          })}\n        </div>\n      );\n    else return <div></div>;\n  };\n\n  const handleAddRx = (e) => {\n    e.preventDefault();\n    let name = rxname;\n    let dosage = dosageRef.current.value;\n    let freq = freqRef.current.value;\n    let formula = formulaRef.current.value;\n    let duration = durationRef.current.value;\n\n    let toAdd = {\n      name: name,\n      dosage: dosage,\n      frequency: freq,\n      formula: formula,\n      duration: duration,\n    };\n    //console.log(toAdd);\n    db.collection('prescription')\n      .doc(props.appId)\n      .collection('rx')\n      .add(toAdd)\n      .then((res) => {\n        sendToast('Successfully added rx!', 'success');\n        setActiveComp('list');\n      });\n  };\n\n  const SingleRx = () => {\n    let nameRef = useRef();\n    let dosageRef = useRef();\n    let freqRef = useRef();\n    let durationRef = useRef();\n    let formulaRef = useRef();\n\n    const handleUpdateRx = (e, rxId) => {\n      //e.preventDefault()\n      //console.log(rxId)\n      let name = nameRef.current.value;\n      let dosage = dosageRef.current.value;\n      let freq = freqRef.current.value;\n      let formula = formulaRef.current.value;\n      let duration = durationRef.current.value;\n\n      let temprx = {\n        name: name,\n        dosage: dosage,\n        frequency: freq,\n        formula: formula,\n        duration: duration,\n      };\n      //console.log(temprx);\n      db.collection('prescription')\n        .doc(props.appId)\n        .collection('rx')\n        .doc(rxId)\n        .update(temprx)\n        .then((res) => sendToast('Successfully updated rx!', 'success'));\n    };\n\n    return (\n      <div className='px-5 py-8 text-lg text-gray-600'>\n        <Link\n          className='text-blue-600 hover:text-blue-700 text-lg'\n          onClick={(e) => {\n            e.preventDefault();\n            setActiveComp('list');\n          }}\n        >\n          Back\n        </Link>\n        <div className='w-full mt-8'>\n          <div>Rx Name</div>\n          <input\n            ref={nameRef}\n            defaultValue={activeRx.data().name}\n            className='rounded-md mt-2 mb-5 px-2 py-1 border-2'\n            placeholder='Enter Rx Name'\n          ></input>\n        </div>\n        <div className='w-full'>\n          <div>Strength</div>\n          <input\n            ref={formulaRef}\n            defaultValue={activeRx.data().formula}\n            className='rounded-md mt-2 mb-5 px-2 py-1 border-2'\n            placeholder='Enter Strength'\n          ></input>\n        </div>\n        <div className='w-full'>\n          <div>Frequency</div>\n          <select\n            ref={freqRef}\n            defaultValue={activeRx.data().frequency}\n            className='rounded-md mt-2 mb-5 px-2 py-1 border-2'\n          >\n            <option>a.c. (Before meal)</option>\n            <option>p.c. (After meal)</option>\n            <option>a.m. (Before noon)</option>\n            <option>p.m. (After noon)</option>\n            <option>Alt. die (Alternate day)</option>\n            <option>o.m. (Each morning)</option>\n            <option>o.d. (Daily (once a day))</option>\n            <option>H.S. (Bed time)</option>\n            <option>p.r.n (When required)</option>\n            <option>s.o.s (When necessary)</option>\n            <option>b.D (B.i.d) (Twice a day)</option>\n            <option>t.i.d (Three times in a day)</option>\n            <option>Stat (At once)</option>\n            <option>o.n. (Each night)</option>\n          </select>\n        </div>\n        <div className='w-full'>\n          <div>Dosage</div>\n          <select\n            ref={dosageRef}\n            defaultValue={activeRx.data().dosage}\n            className='rounded-md mt-2 mb-5 px-2 py-1 border-2'\n          >\n            <option>1 Tab</option>\n            <option>2 Tab</option>\n            <option>1 Teaspoon</option>\n            <option>2 Teaspoon</option>\n          </select>\n        </div>\n        <div className='w-full'>\n          <div>Duration (in Day)</div>\n          <input\n            ref={durationRef}\n            defaultValue={activeRx.data().duration}\n            className='rounded-md mt-2 mb-8 px-2 py-1 border-2'\n            placeholder='Enter Duration'\n          ></input>\n        </div>\n        <Link\n          onClick={(e) => handleUpdateRx(e, activeRx.id)}\n          className='rounded-md py-2 px-3 text-white bg-blue-500 hover:bg-blue-700 font-semibold text-lg'\n        >\n          Update\n        </Link>\n      </div>\n    );\n  };\n  if (activeComp === 'list') return <RxList />;\n  else if (activeRx && activeComp === 'single') return <SingleRx />;\n  else if (activeComp === 'add')\n    return (\n      <div className='px-5 py-8 text-lg text-gray-600'>\n        <div className='w-full mt-8'>\n          <div>Rx Name</div>\n          <RxNameSuggest value={rxname} setValue={setRxname} />\n        </div>\n        <div className='w-full'>\n          <div>Strength</div>\n          <input\n            ref={formulaRef}\n            className='rounded-md mt-2 mb-5 px-2 py-1 border-2'\n            placeholder='Enter Strength'\n          ></input>\n        </div>\n        <div className='w-full'>\n          <div>Frequency</div>\n          <select\n            ref={freqRef}\n            className='rounded-md mt-2 mb-5 px-2 py-1 border-2'\n          >\n            <option>a.c. (Before meal)</option>\n            <option>p.c. (After meal)</option>\n            <option>a.m. (Before noon)</option>\n            <option>p.m. (After noon)</option>\n            <option>Alt. die (Alternate day)</option>\n            <option>o.m. (Each morning)</option>\n            <option>o.d. (Daily (once a day))</option>\n            <option>H.S. (Bed time)</option>\n            <option>p.r.n (When required)</option>\n            <option>s.o.s (When necessary)</option>\n            <option>b.D (B.i.d) (Twice a day)</option>\n            <option>t.i.d (Three times in a day)</option>\n            <option>Stat (At once)</option>\n            <option>o.n. (Each night)</option>\n          </select>\n        </div>\n        <div className='w-full'>\n          <div>Dosage</div>\n          <select\n            ref={dosageRef}\n            className='rounded-md mt-2 mb-5 px-2 py-1 border-2'\n          >\n            <option>1 Tab</option>\n            <option>2 Tab</option>\n            <option>1 Teaspoon</option>\n            <option>2 Teaspoon</option>\n          </select>\n        </div>\n        <div className='w-full'>\n          <div>Duration (in days)</div>\n          <input\n            ref={durationRef}\n            className='rounded-md mt-2 mb-8 px-2 py-1 border-2'\n            placeholder='Enter Duration'\n          ></input>\n        </div>\n        <div className='flex'>\n          <Link\n            className='rounded-md py-2 px-3 text-white bg-blue-500 hover:bg-blue-700 font-semibold text-lg'\n            onClick={(e) => {\n              e.preventDefault();\n              setActiveComp('list');\n            }}\n          >\n            Cancel\n          </Link>\n          <Link\n            onClick={handleAddRx}\n            className='rounded-md py-2 px-3 text-white mx-8 bg-blue-500 hover:bg-blue-700 font-semibold text-lg'\n          >\n            Add\n          </Link>\n        </div>\n      </div>\n    );\n};\n\nconst NextReview = (props) => {\n  let [initialData, setInitialData] = useState({});\n  let [pdfLink, setPdfLink] = useState();\n  let [nextDate, setNextDate] = useState();\n  let [testValue, setTestValue] = useState('');\n  let [loading, setLoading] = useState(false);\n\n  var testsRef = useRef();\n  var instRef = useRef();\n  let params = useParams();\n\n  useEffect(() => {\n    db.collection('prescription')\n      .doc(props.appId)\n      .get()\n      .then((res) => {\n        if (res.data()) {\n          setInitialData(res.data());\n          setNextDate(res.data().nextDate);\n        }\n      });\n  }, []);\n\n  const handleGeneratePdf = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    db.collection('prescription')\n      .doc(`${props.appId}`)\n      .get()\n      .then((fres) => {\n        if (fres.data()) {\n          axios\n            .get(\n              'https://us-central1-nuvocliniq-test.cloudfunctions.net/onRequestApis/prescriptionPdf?docId=' +\n                `${props.appId}`\n\n              // \"https://us-central1-nuvoclinic-ad7c7.cloudfunctions.net/onRequestApis/prescriptionPdf?docId=\" +\n              //   `${props.appId}`\n            )\n            .then((res) => {\n              db.collection(`${params.type}`)\n                .doc(props.appId)\n                .update({\n                  presCreateAt: new Date(),\n                })\n                .then((result) => {\n                  sendToast('Prescription generated successfully!', 'success');\n                  setLoading(false);\n                });\n            })\n            .catch((err) => console.log(err));\n        } else {\n          sendToast('Please update basic information', 'error');\n        }\n      });\n  };\n\n  const handleDateSelected = (date) => {\n    //console.log(date)\n    let dt = date.getDate().toString();\n    let month = (date.getMonth() + 1).toString();\n    let year = date.getFullYear().toString();\n    let newDate = `${dt.length === 2 ? dt : '0' + dt}-${\n      month.length === 2 ? month : '0' + month\n    }-${year}`;\n    setNextDate(newDate);\n    //console.log(newDate, dt, month, year)\n  };\n\n  const handleViewPdf = (e) => {\n    e.preventDefault();\n    db.collection(`${params.type}`)\n      .doc(props.appId)\n      .get()\n      .then((res) => {\n        if (!res.data() || !res.data().presCreateAt)\n          sendToast('Prescription not generated yet', 'info');\n        else\n          storageRef\n            .child(`prescriptionPdf/${props.appId}.pdf`)\n            .getDownloadURL()\n            .then((result) => {\n              setPdfLink(result);\n              document.getElementById('openPdf').click();\n            });\n      });\n  };\n\n  const handleUpdateClick = (e) => {\n    e.preventDefault();\n    let tests = testsRef.current.value;\n    let inst = instRef.current.value;\n\n    let tempAdd = {\n      nextDate: nextDate ? nextDate : 'Not scheduled',\n      test: tests,\n      instruction: inst,\n    };\n    db.collection('prescription')\n      .doc(`${props.appId}`)\n      .get()\n      .then((fres) => {\n        if (fres.data()) {\n          db.collection('prescription')\n            .doc(props.appId)\n            .update(tempAdd)\n            .then((res) =>\n              sendToast('Successfully updated next review details!', 'success')\n            );\n        } else {\n          db.collection('prescription')\n            .doc(props.appId)\n            .set(tempAdd)\n            .then((res) =>\n              sendToast('Successfully updated next review details!', 'success')\n            );\n        }\n      });\n  };\n\n  return (\n    <div className='px-5 py-8 text-lg text-gray-700'>\n      <div className='w-full'>\n        <div>\n          Next Review Date:{' '}\n          <span className='text-blue-600 font-bold'>{nextDate}</span>\n        </div>\n        <DatePicker\n          className='border-2 rounded-md  bg-white w-32 px-3 py-1 mt-2 mb-5'\n          //selected={}//startDate}\n          placeholderText='select date'\n          minDate={new Date()}\n          dateFormat='dd/MM/yyyy'\n          onChange={(date) => handleDateSelected(date)}\n        />\n      </div>\n      <div className='w-full'>\n        <div>Tests</div>\n        <input\n          defaultValue={initialData.test}\n          ref={testsRef}\n          className='rounded-md mt-2 mb-5 px-2 py-1 border-2'\n          placeholder='No Tests'\n        ></input>\n        <div className='flex items-center'>\n          <TestSuggest value={testValue} setValue={setTestValue} />\n          <Link\n            onClick={(e) => {\n              e.preventDefault();\n              testsRef.current.value =\n                testsRef.current.value !== ''\n                  ? `${testsRef.current.value}, ${testValue}`\n                  : testValue;\n            }}\n            className='px-2 py-2 ml-2 -mt-3 text-white rounded-md font-semibold w-max h-10 bg-blue-500'\n          >\n            Enter\n          </Link>\n        </div>\n      </div>\n      <div className='w-full'>\n        <div>Special Instruction</div>\n        <input\n          defaultValue={initialData.instruction}\n          ref={instRef}\n          className='rounded-md mt-2 mb-8 px-2 py-1 border-2'\n          placeholder='Enter Instruction'\n        ></input>\n      </div>\n      <div className={`${loading ? 'hidden' : ''}`}>\n        <Link\n          onClick={handleUpdateClick}\n          className='rounded-md py-2 px-3 text-white bg-blue-500 hover:bg-blue-700 font-semibold text-lg'\n        >\n          Update\n        </Link>\n        <Link\n          onClick={handleGeneratePdf}\n          className={`rounded-md mx-5 py-2 px-3 text-white bg-blue-500 hover:bg-blue-700 font-semibold text-lg`}\n        >\n          Generate prescription\n        </Link>\n        <Link\n          onClick={handleViewPdf}\n          className='rounded-md py-2 px-3 text-white bg-blue-500 hover:bg-blue-700 font-semibold text-lg'\n        >\n          View Pdf\n        </Link>\n        <a href={pdfLink} target='_blank' id='openPdf'></a>\n      </div>\n      <div className={`${loading ? '' : 'hidden'} -mt-16`}>\n        <Lottie options={defaultOptions} height={150} width={150} />\n      </div>\n    </div>\n  );\n};\n","C:\\Users\\ishan\\Desktop\\nuvocliniq_website-main\\src\\pages\\patient\\calendar.js",["171","172","173","174","175","176","177"],"C:\\Users\\ishan\\Desktop\\nuvocliniq_website-main\\src\\pages\\signin.js",["178","179","180","181"],"C:\\Users\\ishan\\Desktop\\nuvocliniq_website-main\\src\\pages\\doctor\\telemidicine\\telemedicine.js",["182"],"C:\\Users\\ishan\\Desktop\\nuvocliniq_website-main\\src\\pages\\doctor\\users\\edit.js",["183","184"],"C:\\Users\\ishan\\Desktop\\nuvocliniq_website-main\\src\\pages\\labProvider\\bookings_lp.js",["185","186","187","188","189","190","191","192","193"],"C:\\Users\\ishan\\Desktop\\nuvocliniq_website-main\\src\\components\\arrays.js",[],"C:\\Users\\ishan\\Desktop\\nuvocliniq_website-main\\src\\pages\\doctor\\telemidicine\\videoCall.js",["194","195","196","197","198","199","200","201"],"C:\\Users\\ishan\\Desktop\\nuvocliniq_website-main\\src\\App.js",["202","203"],"C:\\Users\\ishan\\Desktop\\nuvocliniq_website-main\\src\\pages\\signup.js",["204","205","206","207","208"],"import React, { useState, useRef } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { auth, db } from '../firebase';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useAuth } from '../contexts';\r\nimport { Navbar } from '../components/navbar';\r\nimport { Footer } from '../components/footer';\r\n\r\nexport const Signup = (props) => {\r\n  let [loggedIn, setLoggedIn] = useState(useAuth());\r\n\r\n  var emailRef = useRef(null);\r\n  var passRef = useRef(null);\r\n  var nameRef = useRef(null);\r\n  var checkboxRef = useRef();\r\n  var history = useHistory();\r\n\r\n  const sendToast = (message, type) => {\r\n    const tostMsg = {\r\n      position: 'top-right',\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    };\r\n    if (type === 'error') toast.error(message, tostMsg);\r\n    else if (type === 'info') toast.info(message, tostMsg);\r\n    else if (type === 'success') toast.success(message, tostMsg);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    //console.log(checkboxRef.current.checked)\r\n    const reEmail =\r\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    var email = emailRef.current.value;\r\n    var pass = passRef.current.value;\r\n    var name = nameRef.current.value;\r\n\r\n    if (!email || !pass || !name)\r\n      sendToast('Fields marked with * are important!', 'info');\r\n    else if (!reEmail.test(String(email).toLowerCase()))\r\n      sendToast('Enter valid Email', 'error');\r\n    // else if (!checkboxRef.current.checked)\r\n    //   sendToast('Please accept our privacy policies', 'error');\r\n    else {\r\n      auth\r\n        .createUserWithEmailAndPassword(email, pass)\r\n        .then((res) => {\r\n          db.collection('doctors')\r\n            .doc(res.user.uid)\r\n            .set({\r\n              name: name,\r\n              email: email,\r\n              delay: 'On time',\r\n              hostStatus: '00',\r\n              verify: false,\r\n            })\r\n            .then((result) => {\r\n              res.user\r\n                .updateProfile({\r\n                  displayName: 'doctor',\r\n                })\r\n                .then(() => {\r\n                  sendToast('Successfully created your account!', 'success');\r\n                  history.push('/docDetails');\r\n                });\r\n            })\r\n            .catch((err) => console.log(err));\r\n        })\r\n        .catch((error) => {\r\n          console.log(error.code, error.message);\r\n          if (error.code === 'auth/email-already-in-use')\r\n            sendToast('Email already in use', 'error');\r\n        });\r\n    }\r\n  };\r\n  if (loggedIn.currentUser) {\r\n    history.push('/');\r\n    return <div></div>;\r\n  } else if (!loggedIn.currentUser)\r\n    return (\r\n      <div>\r\n        <ToastContainer\r\n          position='top-right'\r\n          autoClose={5000}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n        <Navbar />\r\n        <div\r\n          style={{\r\n            backgroundPosition: 'center',\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundSize: 'cover',\r\n            width: '100%',\r\n          }}\r\n          className='md:flex md:justify-between sm:pt-14 pt-14 pb-7 bg-gray-100 h-screen'\r\n        >\r\n          <div className='flex justify-center items-center w-full pt-5'>\r\n            <div className='p-5 w-96 rounded-md bg-white shadow-xl border border-gray-200'>\r\n              <div>\r\n                <div className='text-black text-2xl font-semibold pb-5 flex justify-start'>\r\n                  Doctor Signup\r\n                </div>\r\n              </div>\r\n              <div className=''>\r\n                <div className='items-start'>\r\n                  Name <span className='text-red-700 ml-1'>*</span>\r\n                </div>\r\n                <input\r\n                  placeholder='Enter your name'\r\n                  ref={nameRef}\r\n                  className='my-4 p-3 outline-none w-full border-2 border-gray-200 rounded-md'\r\n                ></input>\r\n              </div>\r\n              <div>\r\n                <p className=' items-start'>\r\n                  Email <span className='ml-1 text-red-700'>*</span>\r\n                </p>\r\n                <input\r\n                  placeholder='Enter your email'\r\n                  ref={emailRef}\r\n                  className='my-4 p-3 outline-none w-full border-2 border-gray-200 rounded-md'\r\n                ></input>\r\n                <p className='items-start'>\r\n                  Password <span className='text-red-700 ml-1'>*</span>\r\n                </p>\r\n                <input\r\n                  placeholder='Enter password'\r\n                  ref={passRef}\r\n                  className='my-4 p-3 outline-none w-full border-2 border-gray-200 rounded-md'\r\n                ></input>\r\n              </div>\r\n\r\n              <div className='sm:flex justify-between items-center'>\r\n                <button\r\n                  onClick={handleSubmit}\r\n                  className='bg-green-500 rounded px-4 py-2 mt-2 mb-4 text-white'\r\n                >\r\n                  Create Account\r\n                </button>\r\n              </div>\r\n\r\n              <div className='flex justify-start'>\r\n                <span className='text-black'>Already a member?</span>\r\n                <Link to='/signin' className='text-green-500 ml-2 font-bold'>\r\n                  {' '}\r\n                  Sign In\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* <Footer /> */}\r\n      </div>\r\n    );\r\n};\r\n","C:\\Users\\ishan\\Desktop\\nuvocliniq_website-main\\src\\components\\navbar.js",["209","210","211"],"C:\\Users\\ishan\\Desktop\\nuvocliniq_website-main\\src\\pages\\doctor\\docNav.js",["212","213","214","215","216"],"C:\\Users\\ishan\\Desktop\\nuvocliniq_website-main\\src\\pages\\doctor\\docAppointments.js",["217","218","219","220","221","222","223","224","225","226","227"],"C:\\Users\\ishan\\Desktop\\nuvocliniq_website-main\\src\\pages\\doctor\\docCalander.js",["228","229","230","231","232","233"],"C:\\Users\\ishan\\Desktop\\nuvocliniq_website-main\\src\\pages\\doctor\\telemidicine\\CometChatMessages\\index.js",[],"C:\\Users\\ishan\\Desktop\\nuvocliniq_website-main\\src\\pages\\doctor\\telemidicine\\CometUtils\\util\\enums.js",[],{"ruleId":"234","replacedBy":"235"},{"ruleId":"236","replacedBy":"237"},{"ruleId":"238","severity":1,"message":"239","line":8,"column":10,"nodeType":"240","messageId":"241","endLine":8,"endColumn":28},{"ruleId":"238","severity":1,"message":"242","line":13,"column":18,"nodeType":"240","messageId":"241","endLine":13,"endColumn":29},{"ruleId":"243","severity":1,"message":"244","line":47,"column":19,"nodeType":"245","endLine":47,"endColumn":71},{"ruleId":"238","severity":1,"message":"246","line":1,"column":17,"nodeType":"240","messageId":"241","endLine":1,"endColumn":23},{"ruleId":"243","severity":1,"message":"244","line":43,"column":19,"nodeType":"245","endLine":43,"endColumn":41},{"ruleId":"243","severity":1,"message":"244","line":49,"column":17,"nodeType":"245","endLine":52,"endColumn":18},{"ruleId":"243","severity":1,"message":"244","line":234,"column":15,"nodeType":"245","endLine":237,"endColumn":16},{"ruleId":"247","severity":1,"message":"248","line":25,"column":33,"nodeType":"249","messageId":"250","endLine":25,"endColumn":34,"suggestions":"251"},{"ruleId":"247","severity":1,"message":"248","line":25,"column":58,"nodeType":"249","messageId":"250","endLine":25,"endColumn":59,"suggestions":"252"},{"ruleId":"238","severity":1,"message":"242","line":10,"column":18,"nodeType":"240","messageId":"241","endLine":10,"endColumn":29},{"ruleId":"253","severity":1,"message":"254","line":30,"column":6,"nodeType":"255","endLine":30,"endColumn":8,"suggestions":"256"},{"ruleId":"253","severity":1,"message":"257","line":31,"column":6,"nodeType":"255","endLine":31,"endColumn":8,"suggestions":"258"},{"ruleId":"243","severity":1,"message":"244","line":131,"column":19,"nodeType":"245","endLine":131,"endColumn":72},{"ruleId":"243","severity":1,"message":"244","line":176,"column":19,"nodeType":"245","endLine":183,"endColumn":20},{"ruleId":"259","severity":1,"message":"260","line":294,"column":23,"nodeType":"245","endLine":294,"endColumn":70},{"ruleId":"261","severity":1,"message":"262","line":294,"column":41,"nodeType":"263","endLine":294,"endColumn":56},{"ruleId":"238","severity":1,"message":"246","line":1,"column":38,"nodeType":"240","messageId":"241","endLine":1,"endColumn":44},{"ruleId":"238","severity":1,"message":"264","line":15,"column":8,"nodeType":"240","messageId":"241","endLine":15,"endColumn":16},{"ruleId":"238","severity":1,"message":"242","line":15,"column":18,"nodeType":"240","messageId":"241","endLine":15,"endColumn":29},{"ruleId":"238","severity":1,"message":"265","line":25,"column":9,"nodeType":"240","messageId":"241","endLine":25,"endColumn":18},{"ruleId":"253","severity":1,"message":"266","line":55,"column":6,"nodeType":"255","endLine":55,"endColumn":8,"suggestions":"267"},{"ruleId":"238","severity":1,"message":"268","line":65,"column":15,"nodeType":"240","messageId":"241","endLine":65,"endColumn":22},{"ruleId":"238","severity":1,"message":"269","line":67,"column":17,"nodeType":"240","messageId":"241","endLine":67,"endColumn":25},{"ruleId":"253","severity":1,"message":"270","line":76,"column":6,"nodeType":"255","endLine":76,"endColumn":12,"suggestions":"271"},{"ruleId":"253","severity":1,"message":"272","line":92,"column":10,"nodeType":"255","endLine":92,"endColumn":12,"suggestions":"273"},{"ruleId":"243","severity":1,"message":"244","line":116,"column":17,"nodeType":"245","endLine":119,"endColumn":18},{"ruleId":"243","severity":1,"message":"244","line":151,"column":13,"nodeType":"245","endLine":151,"endColumn":73},{"ruleId":"243","severity":1,"message":"244","line":225,"column":19,"nodeType":"245","endLine":232,"endColumn":20},{"ruleId":"238","severity":1,"message":"274","line":2,"column":10,"nodeType":"240","messageId":"241","endLine":2,"endColumn":14},{"ruleId":"238","severity":1,"message":"242","line":12,"column":18,"nodeType":"240","messageId":"241","endLine":12,"endColumn":29},{"ruleId":"234","replacedBy":"275"},{"ruleId":"236","replacedBy":"276"},{"ruleId":"238","severity":1,"message":"242","line":17,"column":18,"nodeType":"240","messageId":"241","endLine":17,"endColumn":29},{"ruleId":"277","severity":1,"message":"278","line":148,"column":80,"nodeType":"263","endLine":148,"endColumn":104},{"ruleId":"243","severity":1,"message":"244","line":40,"column":13,"nodeType":"245","endLine":40,"endColumn":74},{"ruleId":"238","severity":1,"message":"279","line":1,"column":17,"nodeType":"240","messageId":"241","endLine":1,"endColumn":26},{"ruleId":"238","severity":1,"message":"246","line":1,"column":28,"nodeType":"240","messageId":"241","endLine":1,"endColumn":34},{"ruleId":"238","severity":1,"message":"274","line":2,"column":10,"nodeType":"240","messageId":"241","endLine":2,"endColumn":14},{"ruleId":"238","severity":1,"message":"280","line":2,"column":16,"nodeType":"240","messageId":"241","endLine":2,"endColumn":25},{"ruleId":"238","severity":1,"message":"281","line":129,"column":19,"nodeType":"240","messageId":"241","endLine":129,"endColumn":31},{"ruleId":"253","severity":1,"message":"282","line":133,"column":13,"nodeType":"283","endLine":141,"endColumn":4},{"ruleId":"253","severity":1,"message":"284","line":141,"column":6,"nodeType":"255","endLine":141,"endColumn":8,"suggestions":"285"},{"ruleId":"253","severity":1,"message":"282","line":142,"column":13,"nodeType":"283","endLine":178,"endColumn":4},{"ruleId":"253","severity":1,"message":"286","line":178,"column":6,"nodeType":"255","endLine":178,"endColumn":15,"suggestions":"287"},{"ruleId":"253","severity":1,"message":"282","line":444,"column":13,"nodeType":"283","endLine":453,"endColumn":4},{"ruleId":"253","severity":1,"message":"284","line":453,"column":6,"nodeType":"255","endLine":453,"endColumn":8,"suggestions":"288"},{"ruleId":"253","severity":1,"message":"284","line":737,"column":6,"nodeType":"255","endLine":737,"endColumn":8,"suggestions":"289"},{"ruleId":"259","severity":1,"message":"260","line":904,"column":9,"nodeType":"245","endLine":904,"endColumn":56},{"ruleId":"261","severity":1,"message":"262","line":904,"column":27,"nodeType":"263","endLine":904,"endColumn":42},{"ruleId":"238","severity":1,"message":"290","line":6,"column":26,"nodeType":"240","messageId":"241","endLine":6,"endColumn":31},{"ruleId":"253","severity":1,"message":"291","line":88,"column":6,"nodeType":"255","endLine":88,"endColumn":8,"suggestions":"292"},{"ruleId":"243","severity":1,"message":"244","line":207,"column":15,"nodeType":"245","endLine":210,"endColumn":16},{"ruleId":"243","severity":1,"message":"244","line":223,"column":15,"nodeType":"245","endLine":223,"endColumn":75},{"ruleId":"243","severity":1,"message":"244","line":239,"column":15,"nodeType":"245","endLine":242,"endColumn":16},{"ruleId":"243","severity":1,"message":"244","line":278,"column":13,"nodeType":"245","endLine":278,"endColumn":73},{"ruleId":"243","severity":1,"message":"244","line":333,"column":11,"nodeType":"245","endLine":336,"endColumn":12},{"ruleId":"238","severity":1,"message":"293","line":6,"column":10,"nodeType":"240","messageId":"241","endLine":6,"endColumn":16},{"ruleId":"238","severity":1,"message":"242","line":13,"column":18,"nodeType":"240","messageId":"241","endLine":13,"endColumn":29},{"ruleId":"247","severity":1,"message":"248","line":53,"column":17,"nodeType":"249","messageId":"250","endLine":53,"endColumn":18,"suggestions":"294"},{"ruleId":"247","severity":1,"message":"248","line":53,"column":42,"nodeType":"249","messageId":"250","endLine":53,"endColumn":43,"suggestions":"295"},{"ruleId":"238","severity":1,"message":"296","line":3,"column":10,"nodeType":"240","messageId":"241","endLine":3,"endColumn":19},{"ruleId":"253","severity":1,"message":"266","line":33,"column":6,"nodeType":"255","endLine":33,"endColumn":8,"suggestions":"297"},{"ruleId":"243","severity":1,"message":"244","line":99,"column":11,"nodeType":"245","endLine":102,"endColumn":12},{"ruleId":"238","severity":1,"message":"246","line":1,"column":38,"nodeType":"240","messageId":"241","endLine":1,"endColumn":44},{"ruleId":"238","severity":1,"message":"298","line":1,"column":46,"nodeType":"240","messageId":"241","endLine":1,"endColumn":56},{"ruleId":"238","severity":1,"message":"299","line":3,"column":10,"nodeType":"240","messageId":"241","endLine":3,"endColumn":24},{"ruleId":"238","severity":1,"message":"290","line":3,"column":26,"nodeType":"240","messageId":"241","endLine":3,"endColumn":31},{"ruleId":"238","severity":1,"message":"242","line":16,"column":18,"nodeType":"240","messageId":"241","endLine":16,"endColumn":29},{"ruleId":"238","severity":1,"message":"268","line":26,"column":15,"nodeType":"240","messageId":"241","endLine":26,"endColumn":22},{"ruleId":"253","severity":1,"message":"300","line":35,"column":6,"nodeType":"255","endLine":35,"endColumn":8,"suggestions":"301"},{"ruleId":"243","severity":1,"message":"244","line":123,"column":15,"nodeType":"245","endLine":126,"endColumn":16},{"ruleId":"243","severity":1,"message":"244","line":157,"column":19,"nodeType":"245","endLine":160,"endColumn":20},{"ruleId":"238","severity":1,"message":"242","line":21,"column":18,"nodeType":"240","messageId":"241","endLine":21,"endColumn":29},{"ruleId":"253","severity":1,"message":"282","line":47,"column":13,"nodeType":"283","endLine":65,"endColumn":4},{"ruleId":"253","severity":1,"message":"302","line":65,"column":6,"nodeType":"255","endLine":65,"endColumn":8,"suggestions":"303"},{"ruleId":"243","severity":1,"message":"244","line":198,"column":15,"nodeType":"245","endLine":201,"endColumn":16},{"ruleId":"243","severity":1,"message":"244","line":214,"column":15,"nodeType":"245","endLine":217,"endColumn":16},{"ruleId":"243","severity":1,"message":"244","line":230,"column":15,"nodeType":"245","endLine":233,"endColumn":16},{"ruleId":"243","severity":1,"message":"244","line":246,"column":15,"nodeType":"245","endLine":249,"endColumn":16},{"ruleId":"243","severity":1,"message":"244","line":258,"column":15,"nodeType":"245","endLine":261,"endColumn":16},{"ruleId":"238","severity":1,"message":"304","line":5,"column":10,"nodeType":"240","messageId":"241","endLine":5,"endColumn":14},{"ruleId":"238","severity":1,"message":"305","line":7,"column":16,"nodeType":"240","messageId":"241","endLine":7,"endColumn":24},{"ruleId":"238","severity":1,"message":"293","line":8,"column":10,"nodeType":"240","messageId":"241","endLine":8,"endColumn":16},{"ruleId":"238","severity":1,"message":"242","line":11,"column":18,"nodeType":"240","messageId":"241","endLine":11,"endColumn":29},{"ruleId":"238","severity":1,"message":"306","line":16,"column":7,"nodeType":"240","messageId":"241","endLine":16,"endColumn":18},{"ruleId":"247","severity":1,"message":"248","line":38,"column":17,"nodeType":"249","messageId":"250","endLine":38,"endColumn":18,"suggestions":"307"},{"ruleId":"247","severity":1,"message":"248","line":38,"column":42,"nodeType":"249","messageId":"250","endLine":38,"endColumn":43,"suggestions":"308"},{"ruleId":"243","severity":1,"message":"244","line":21,"column":13,"nodeType":"245","endLine":24,"endColumn":14},{"ruleId":"243","severity":1,"message":"244","line":42,"column":15,"nodeType":"245","endLine":45,"endColumn":16},{"ruleId":"243","severity":1,"message":"244","line":73,"column":9,"nodeType":"245","endLine":76,"endColumn":10},{"ruleId":"238","severity":1,"message":"279","line":1,"column":17,"nodeType":"240","messageId":"241","endLine":1,"endColumn":26},{"ruleId":"238","severity":1,"message":"246","line":1,"column":28,"nodeType":"240","messageId":"241","endLine":1,"endColumn":34},{"ruleId":"238","severity":1,"message":"309","line":17,"column":9,"nodeType":"240","messageId":"241","endLine":17,"endColumn":23},{"ruleId":"238","severity":1,"message":"242","line":52,"column":18,"nodeType":"240","messageId":"241","endLine":52,"endColumn":29},{"ruleId":"243","severity":1,"message":"244","line":90,"column":9,"nodeType":"245","endLine":93,"endColumn":10},{"ruleId":"238","severity":1,"message":"242","line":15,"column":18,"nodeType":"240","messageId":"241","endLine":15,"endColumn":29},{"ruleId":"238","severity":1,"message":"268","line":77,"column":15,"nodeType":"240","messageId":"241","endLine":77,"endColumn":22},{"ruleId":"238","severity":1,"message":"269","line":78,"column":17,"nodeType":"240","messageId":"241","endLine":78,"endColumn":25},{"ruleId":"253","severity":1,"message":"310","line":87,"column":6,"nodeType":"255","endLine":87,"endColumn":8,"suggestions":"311"},{"ruleId":"253","severity":1,"message":"272","line":100,"column":8,"nodeType":"255","endLine":100,"endColumn":10,"suggestions":"312"},{"ruleId":"243","severity":1,"message":"244","line":123,"column":15,"nodeType":"245","endLine":126,"endColumn":16},{"ruleId":"243","severity":1,"message":"244","line":172,"column":13,"nodeType":"245","endLine":172,"endColumn":51},{"ruleId":"243","severity":1,"message":"244","line":290,"column":19,"nodeType":"245","endLine":290,"endColumn":72},{"ruleId":"243","severity":1,"message":"244","line":335,"column":19,"nodeType":"245","endLine":342,"endColumn":20},{"ruleId":"259","severity":1,"message":"260","line":453,"column":23,"nodeType":"245","endLine":453,"endColumn":70},{"ruleId":"261","severity":1,"message":"262","line":453,"column":41,"nodeType":"263","endLine":453,"endColumn":56},{"ruleId":"238","severity":1,"message":"246","line":1,"column":38,"nodeType":"240","messageId":"241","endLine":1,"endColumn":44},{"ruleId":"238","severity":1,"message":"242","line":26,"column":18,"nodeType":"240","messageId":"241","endLine":26,"endColumn":29},{"ruleId":"238","severity":1,"message":"313","line":112,"column":9,"nodeType":"240","messageId":"241","endLine":112,"endColumn":14},{"ruleId":"253","severity":1,"message":"314","line":132,"column":6,"nodeType":"255","endLine":132,"endColumn":8,"suggestions":"315"},{"ruleId":"253","severity":1,"message":"282","line":134,"column":13,"nodeType":"283","endLine":149,"endColumn":4},{"ruleId":"253","severity":1,"message":"316","line":149,"column":6,"nodeType":"255","endLine":149,"endColumn":8,"suggestions":"317"},"no-native-reassign",["318"],"no-negated-in-lhs",["319"],"no-unused-vars","'DoctorDetailsInput' is defined but never used.","Identifier","unusedVar","'setLoggedIn' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useRef' is defined but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["320","321"],["322","323"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loggedIn.currentUser.uid'. Either include it or remove the dependency array.","ArrayExpression",["324"],"React Hook useEffect has a missing dependency: 'appId'. Either include it or remove the dependency array.",["325"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'loggedIn' is assigned a value but never used.","'sendToast' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'params.foundAt' and 'params.patientId'. Either include them or remove the dependency array.",["326"],"'docSnap' is assigned a value but never used.","'lastItem' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'appArray' and 'params.patientId'. Either include them or remove the dependency array.",["327"],"React Hook useEffect has a missing dependency: 'item'. Either include it or remove the dependency array.",["328"],"'Link' is defined but never used.",["318"],["319"],"react/jsx-no-duplicate-props","No duplicate props allowed","'useEffect' is defined but never used.","'useParams' is defined but never used.","'setAllergies' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'props.appId'. Either include it or remove the dependency array.",["329"],"React Hook useEffect has missing dependencies: 'params.type' and 'props.appId'. Either include them or remove the dependency array.",["330"],["331"],["332"],"'toast' is defined but never used.","React Hook useEffect has missing dependencies: 'newDate' and 'params.docId'. Either include them or remove the dependency array.",["333"],"'Footer' is defined but never used.",["334","335"],["336","337"],"'VideoCall' is defined but never used.",["338"],"'useContext' is defined but never used.","'ToastContainer' is defined but never used.","React Hook useEffect has missing dependencies: 'loggedIn.currentUser.uid' and 'testArray'. Either include them or remove the dependency array.",["339"],"React Hook useEffect has missing dependencies: 'fetchToken' and 'params.appId'. Either include them or remove the dependency array.",["340"],"'Home' is defined but never used.","'Inactive' is defined but never used.","'checkboxRef' is assigned a value but never used.",["341","342"],["343","344"],"'handleBarClick' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'appArray' and 'loggedIn.currentUser.uid'. Either include them or remove the dependency array.",["345"],["346"],"'first' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'refDates'. Either include it or remove the dependency array.",["347"],"React Hook useEffect has a missing dependency: 'loggedIn.userDetails.clinics'. Either include it or remove the dependency array.",["348"],"no-global-assign","no-unsafe-negation",{"messageId":"349","fix":"350","desc":"351"},{"messageId":"352","fix":"353","desc":"354"},{"messageId":"349","fix":"355","desc":"351"},{"messageId":"352","fix":"356","desc":"354"},{"desc":"357","fix":"358"},{"desc":"359","fix":"360"},{"desc":"361","fix":"362"},{"desc":"363","fix":"364"},{"desc":"365","fix":"366"},{"desc":"367","fix":"368"},{"desc":"369","fix":"370"},{"desc":"367","fix":"371"},{"desc":"367","fix":"372"},{"desc":"373","fix":"374"},{"messageId":"349","fix":"375","desc":"351"},{"messageId":"352","fix":"376","desc":"354"},{"messageId":"349","fix":"377","desc":"351"},{"messageId":"352","fix":"378","desc":"354"},{"desc":"361","fix":"379"},{"desc":"380","fix":"381"},{"desc":"382","fix":"383"},{"messageId":"349","fix":"384","desc":"351"},{"messageId":"352","fix":"385","desc":"354"},{"messageId":"349","fix":"386","desc":"351"},{"messageId":"352","fix":"387","desc":"354"},{"desc":"388","fix":"389"},{"desc":"365","fix":"390"},{"desc":"391","fix":"392"},{"desc":"393","fix":"394"},"removeEscape",{"range":"395","text":"396"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"397","text":"398"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"399","text":"396"},{"range":"400","text":"398"},"Update the dependencies array to be: [loggedIn.currentUser.uid]",{"range":"401","text":"402"},"Update the dependencies array to be: [appId]",{"range":"403","text":"404"},"Update the dependencies array to be: [params.foundAt, params.patientId]",{"range":"405","text":"406"},"Update the dependencies array to be: [appArray, params.patientId, user]",{"range":"407","text":"408"},"Update the dependencies array to be: [item]",{"range":"409","text":"410"},"Update the dependencies array to be: [props.appId]",{"range":"411","text":"412"},"Update the dependencies array to be: [appInfo, params.type, props.appId]",{"range":"413","text":"414"},{"range":"415","text":"412"},{"range":"416","text":"412"},"Update the dependencies array to be: [newDate, params.docId]",{"range":"417","text":"418"},{"range":"419","text":"396"},{"range":"420","text":"398"},{"range":"421","text":"396"},{"range":"422","text":"398"},{"range":"423","text":"406"},"Update the dependencies array to be: [loggedIn.currentUser.uid, testArray]",{"range":"424","text":"425"},"Update the dependencies array to be: [fetchToken, params.appId]",{"range":"426","text":"427"},{"range":"428","text":"396"},{"range":"429","text":"398"},{"range":"430","text":"396"},{"range":"431","text":"398"},"Update the dependencies array to be: [appArray, loggedIn.currentUser.uid]",{"range":"432","text":"433"},{"range":"434","text":"410"},"Update the dependencies array to be: [refDates]",{"range":"435","text":"436"},"Update the dependencies array to be: [loggedIn.userDetails.clinics]",{"range":"437","text":"438"},[737,738],"",[737,737],"\\",[762,763],[762,762],[866,868],"[loggedIn.currentUser.uid]",[900,902],"[appId]",[1694,1696],"[params.foundAt, params.patientId]",[2314,2320],"[appArray, params.patientId, user]",[2741,2743],"[item]",[4273,4275],"[props.appId]",[5204,5213],"[appInfo, params.type, props.appId]",[14380,14382],[23204,23206],[2558,2560],"[newDate, params.docId]",[1540,1541],[1540,1540],[1565,1566],[1565,1565],[892,894],[1253,1255],"[loggedIn.currentUser.uid, testArray]",[1812,1814],"[fetchToken, params.appId]",[1240,1241],[1240,1240],[1265,1266],[1265,1265],[2691,2693],"[appArray, loggedIn.currentUser.uid]",[3017,3019],[3755,3757],"[refDates]",[4217,4219],"[loggedIn.userDetails.clinics]"]